//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StratasFair.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StratasFairDBEntities : DbContext
    {
        public StratasFairDBEntities()
            : base("name=StratasFairDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblEmailServer> tblEmailServers { get; set; }
        public virtual DbSet<tblTemplateMaster> tblTemplateMasters { get; set; }
        public virtual DbSet<tblAdminEmailNotificationSetting> tblAdminEmailNotificationSettings { get; set; }
        public virtual DbSet<tblSetting> tblSettings { get; set; }
        public virtual DbSet<tblDiscipline> tblDisciplines { get; set; }
        public virtual DbSet<tblSubscription> tblSubscriptions { get; set; }
        public virtual DbSet<vw_GetSubscriptionMaster> vw_GetSubscriptionMaster { get; set; }
        public virtual DbSet<vw_UserDetails> vw_UserDetails { get; set; }
        public virtual DbSet<tblStratasBoard> tblStratasBoards { get; set; }
        public virtual DbSet<tblStratasBoardSubscription> tblStratasBoardSubscriptions { get; set; }
        public virtual DbSet<vw_GetStratasBoardSubscription> vw_GetStratasBoardSubscription { get; set; }
        public virtual DbSet<tblSubscriptionExpireMailReminder> tblSubscriptionExpireMailReminders { get; set; }
        public virtual DbSet<tblTestimonial> tblTestimonials { get; set; }
        public virtual DbSet<tblAdvertisement> tblAdvertisements { get; set; }
        public virtual DbSet<tblUserClient> tblUserClients { get; set; }
        public virtual DbSet<vw_UserClientPrivileges> vw_UserClientPrivileges { get; set; }
        public virtual DbSet<tblContactU> tblContactUs { get; set; }
        public virtual DbSet<vw_GetStratasBoard> vw_GetStratasBoard { get; set; }
        public virtual DbSet<tblPMB> tblPMBs { get; set; }
        public virtual DbSet<vw_GetDiscipline> vw_GetDiscipline { get; set; }
        public virtual DbSet<vw_GetVendor> vw_GetVendor { get; set; }
        public virtual DbSet<tblUserPriv> tblUserPrivs { get; set; }
        public virtual DbSet<tblVendor> tblVendors { get; set; }
        public virtual DbSet<tblPollOption> tblPollOptions { get; set; }
        public virtual DbSet<tblPollAnswer> tblPollAnswers { get; set; }
        public virtual DbSet<tblPollQuestion> tblPollQuestions { get; set; }
        public virtual DbSet<tblReminderDetail> tblReminderDetails { get; set; }
        public virtual DbSet<tblEmailServerClient> tblEmailServerClients { get; set; }
        public virtual DbSet<tblpage> tblpages { get; set; }
        public virtual DbSet<tblAdminPMB> tblAdminPMBs { get; set; }
        public virtual DbSet<tblOwnerBill> tblOwnerBills { get; set; }
        public virtual DbSet<tblOwnerBillDetail> tblOwnerBillDetails { get; set; }
        public virtual DbSet<tblScheduleMeeting> tblScheduleMeetings { get; set; }
        public virtual DbSet<tblMaintenanceSchedule> tblMaintenanceSchedules { get; set; }
        public virtual DbSet<tblScheduleMeetingInvite> tblScheduleMeetingInvites { get; set; }
        public virtual DbSet<tblBillType> tblBillTypes { get; set; }
        public virtual DbSet<tblUserRequest> tblUserRequests { get; set; }
        public virtual DbSet<tblForumUser> tblForumUsers { get; set; }
        public virtual DbSet<tblGeneralInformation> tblGeneralInformations { get; set; }
        public virtual DbSet<tblFAQ> tblFAQs { get; set; }
        public virtual DbSet<tblForum> tblForums { get; set; }
        public virtual DbSet<tblUser> tblUsers { get; set; }
        public virtual DbSet<tblUserBookingRequest> tblUserBookingRequests { get; set; }
        public virtual DbSet<tblCMSMaster> tblCMSMasters { get; set; }
        public virtual DbSet<tblCommonArea> tblCommonAreas { get; set; }
        public virtual DbSet<tblQuotationRequest> tblQuotationRequests { get; set; }
        public virtual DbSet<tblReminder> tblReminders { get; set; }
        public virtual DbSet<vw_GetBookingList> vw_GetBookingList { get; set; }
        public virtual DbSet<vw_GetForumList> vw_GetForumList { get; set; }
        public virtual DbSet<vw_GetForumListReply> vw_GetForumListReply { get; set; }
        public virtual DbSet<vw_GetMaintenanceSchedule> vw_GetMaintenanceSchedule { get; set; }
        public virtual DbSet<tblFlagComment> tblFlagComments { get; set; }
        public virtual DbSet<tblForumReply> tblForumReplies { get; set; }
        public virtual DbSet<tblAlertAndNotification> tblAlertAndNotifications { get; set; }
        public virtual DbSet<vw_GetFlaggedMessage> vw_GetFlaggedMessage { get; set; }
        public virtual DbSet<tblForumReplyUser> tblForumReplyUsers { get; set; }
        public virtual DbSet<vw_GetOwnerBookingRequest> vw_GetOwnerBookingRequest { get; set; }
    
        public virtual ObjectResult<Usp_ContactUsReportAdmin_Result> Usp_ContactUsReportAdmin(string keywordSearch, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var keywordSearchParameter = keywordSearch != null ?
                new ObjectParameter("KeywordSearch", keywordSearch) :
                new ObjectParameter("KeywordSearch", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_ContactUsReportAdmin_Result>("Usp_ContactUsReportAdmin", keywordSearchParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Usp_StratasBoardStatusReportAdmin_Result> Usp_StratasBoardStatusReportAdmin(string keywordSearch, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> flag)
        {
            var keywordSearchParameter = keywordSearch != null ?
                new ObjectParameter("KeywordSearch", keywordSearch) :
                new ObjectParameter("KeywordSearch", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_StratasBoardStatusReportAdmin_Result>("Usp_StratasBoardStatusReportAdmin", keywordSearchParameter, pageNumberParameter, pageSizeParameter, flagParameter);
        }
    
        public virtual ObjectResult<Usp_GetModulesByUserClientId_Result> Usp_GetModulesByUserClientId(Nullable<long> userClientId)
        {
            var userClientIdParameter = userClientId.HasValue ?
                new ObjectParameter("UserClientId", userClientId) :
                new ObjectParameter("UserClientId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetModulesByUserClientId_Result>("Usp_GetModulesByUserClientId", userClientIdParameter);
        }
    
        public virtual ObjectResult<Usp_GetQuotationRequest_Result> Usp_GetQuotationRequest(string requesterEmail)
        {
            var requesterEmailParameter = requesterEmail != null ?
                new ObjectParameter("RequesterEmail", requesterEmail) :
                new ObjectParameter("RequesterEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetQuotationRequest_Result>("Usp_GetQuotationRequest", requesterEmailParameter);
        }
    
        public virtual ObjectResult<Usp_GetPMB_Result> Usp_GetPMB(Nullable<long> quotationRequestId)
        {
            var quotationRequestIdParameter = quotationRequestId.HasValue ?
                new ObjectParameter("QuotationRequestId", quotationRequestId) :
                new ObjectParameter("QuotationRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetPMB_Result>("Usp_GetPMB", quotationRequestIdParameter);
        }
    
        public virtual ObjectResult<Usp_SearchVendor_Result> Usp_SearchVendor(string keyword, Nullable<long> disciplineId, Nullable<int> pageSize, Nullable<int> pageNo)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var disciplineIdParameter = disciplineId.HasValue ?
                new ObjectParameter("disciplineId", disciplineId) :
                new ObjectParameter("disciplineId", typeof(long));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("pageNo", pageNo) :
                new ObjectParameter("pageNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_SearchVendor_Result>("Usp_SearchVendor", keywordParameter, disciplineIdParameter, pageSizeParameter, pageNoParameter);
        }
    
        public virtual ObjectResult<USP_GetVendorsById_Result> USP_GetVendorsById(string ids)
        {
            var idsParameter = ids != null ?
                new ObjectParameter("Ids", ids) :
                new ObjectParameter("Ids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetVendorsById_Result>("USP_GetVendorsById", idsParameter);
        }
    
        public virtual ObjectResult<USP_GetPollChart_Result> USP_GetPollChart(Nullable<long> pollId)
        {
            var pollIdParameter = pollId.HasValue ?
                new ObjectParameter("PollId", pollId) :
                new ObjectParameter("PollId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetPollChart_Result>("USP_GetPollChart", pollIdParameter);
        }
    
        public virtual ObjectResult<Usp_GetOwnerCommonResourceCalendarData_Result> Usp_GetOwnerCommonResourceCalendarData(Nullable<long> userClientId, Nullable<long> stratasBoardId)
        {
            var userClientIdParameter = userClientId.HasValue ?
                new ObjectParameter("UserClientId", userClientId) :
                new ObjectParameter("UserClientId", typeof(long));
    
            var stratasBoardIdParameter = stratasBoardId.HasValue ?
                new ObjectParameter("StratasBoardId", stratasBoardId) :
                new ObjectParameter("StratasBoardId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetOwnerCommonResourceCalendarData_Result>("Usp_GetOwnerCommonResourceCalendarData", userClientIdParameter, stratasBoardIdParameter);
        }
    
        public virtual ObjectResult<Usp_GetOwnerGeneralCalendarData_Result> Usp_GetOwnerGeneralCalendarData(Nullable<long> userClientId, Nullable<long> stratasBoardId)
        {
            var userClientIdParameter = userClientId.HasValue ?
                new ObjectParameter("UserClientId", userClientId) :
                new ObjectParameter("UserClientId", typeof(long));
    
            var stratasBoardIdParameter = stratasBoardId.HasValue ?
                new ObjectParameter("StratasBoardId", stratasBoardId) :
                new ObjectParameter("StratasBoardId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetOwnerGeneralCalendarData_Result>("Usp_GetOwnerGeneralCalendarData", userClientIdParameter, stratasBoardIdParameter);
        }
    
        public virtual ObjectResult<string> Usp_OwnerReminderService(Nullable<int> reminderId, Nullable<int> occurence, Nullable<System.DateTime> compareDate)
        {
            var reminderIdParameter = reminderId.HasValue ?
                new ObjectParameter("ReminderId", reminderId) :
                new ObjectParameter("ReminderId", typeof(int));
    
            var occurenceParameter = occurence.HasValue ?
                new ObjectParameter("Occurence", occurence) :
                new ObjectParameter("Occurence", typeof(int));
    
            var compareDateParameter = compareDate.HasValue ?
                new ObjectParameter("CompareDate", compareDate) :
                new ObjectParameter("CompareDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Usp_OwnerReminderService", reminderIdParameter, occurenceParameter, compareDateParameter);
        }
    
        public virtual ObjectResult<Usp_GetAdminPMB_Result> Usp_GetAdminPMB(Nullable<long> strataBoardId, Nullable<long> createdBy)
        {
            var strataBoardIdParameter = strataBoardId.HasValue ?
                new ObjectParameter("StrataBoardId", strataBoardId) :
                new ObjectParameter("StrataBoardId", typeof(long));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetAdminPMB_Result>("Usp_GetAdminPMB", strataBoardIdParameter, createdByParameter);
        }
    
        public virtual int Usp_AddUpdForum(string topic, string topicContent, string uploadedFileName, string uploadedFileActualName, Nullable<long> stratasBoardId, Nullable<long> userClientId, Nullable<System.DateTime> createdOn, Nullable<int> status, Nullable<long> createdBy, string createdFromIP, Nullable<bool> isFlagged, ObjectParameter err)
        {
            var topicParameter = topic != null ?
                new ObjectParameter("Topic", topic) :
                new ObjectParameter("Topic", typeof(string));
    
            var topicContentParameter = topicContent != null ?
                new ObjectParameter("TopicContent", topicContent) :
                new ObjectParameter("TopicContent", typeof(string));
    
            var uploadedFileNameParameter = uploadedFileName != null ?
                new ObjectParameter("UploadedFileName", uploadedFileName) :
                new ObjectParameter("UploadedFileName", typeof(string));
    
            var uploadedFileActualNameParameter = uploadedFileActualName != null ?
                new ObjectParameter("UploadedFileActualName", uploadedFileActualName) :
                new ObjectParameter("UploadedFileActualName", typeof(string));
    
            var stratasBoardIdParameter = stratasBoardId.HasValue ?
                new ObjectParameter("StratasBoardId", stratasBoardId) :
                new ObjectParameter("StratasBoardId", typeof(long));
    
            var userClientIdParameter = userClientId.HasValue ?
                new ObjectParameter("UserClientId", userClientId) :
                new ObjectParameter("UserClientId", typeof(long));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var createdFromIPParameter = createdFromIP != null ?
                new ObjectParameter("CreatedFromIP", createdFromIP) :
                new ObjectParameter("CreatedFromIP", typeof(string));
    
            var isFlaggedParameter = isFlagged.HasValue ?
                new ObjectParameter("IsFlagged", isFlagged) :
                new ObjectParameter("IsFlagged", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_AddUpdForum", topicParameter, topicContentParameter, uploadedFileNameParameter, uploadedFileActualNameParameter, stratasBoardIdParameter, userClientIdParameter, createdOnParameter, statusParameter, createdByParameter, createdFromIPParameter, isFlaggedParameter, err);
        }
    
        public virtual ObjectResult<Usp_GetAdminCommonResourceCalendarData_Result> Usp_GetAdminCommonResourceCalendarData(Nullable<long> userClientId, Nullable<long> stratasBoardId)
        {
            var userClientIdParameter = userClientId.HasValue ?
                new ObjectParameter("UserClientId", userClientId) :
                new ObjectParameter("UserClientId", typeof(long));
    
            var stratasBoardIdParameter = stratasBoardId.HasValue ?
                new ObjectParameter("StratasBoardId", stratasBoardId) :
                new ObjectParameter("StratasBoardId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetAdminCommonResourceCalendarData_Result>("Usp_GetAdminCommonResourceCalendarData", userClientIdParameter, stratasBoardIdParameter);
        }
    
        public virtual int Usp_AddUpdForumReply(Nullable<long> topicId, string message, Nullable<long> stratasBoardId, Nullable<long> userClientId, Nullable<System.DateTime> createdOn, Nullable<int> status, Nullable<long> createdBy, string createdFromIP, Nullable<bool> isFlagged, ObjectParameter err)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("TopicId", topicId) :
                new ObjectParameter("TopicId", typeof(long));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var stratasBoardIdParameter = stratasBoardId.HasValue ?
                new ObjectParameter("StratasBoardId", stratasBoardId) :
                new ObjectParameter("StratasBoardId", typeof(long));
    
            var userClientIdParameter = userClientId.HasValue ?
                new ObjectParameter("UserClientId", userClientId) :
                new ObjectParameter("UserClientId", typeof(long));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var createdFromIPParameter = createdFromIP != null ?
                new ObjectParameter("CreatedFromIP", createdFromIP) :
                new ObjectParameter("CreatedFromIP", typeof(string));
    
            var isFlaggedParameter = isFlagged.HasValue ?
                new ObjectParameter("IsFlagged", isFlagged) :
                new ObjectParameter("IsFlagged", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_AddUpdForumReply", topicIdParameter, messageParameter, stratasBoardIdParameter, userClientIdParameter, createdOnParameter, statusParameter, createdByParameter, createdFromIPParameter, isFlaggedParameter, err);
        }
    
        public virtual int Usp_UpdateReadMessage(Nullable<long> userClientId, Nullable<long> topicId)
        {
            var userClientIdParameter = userClientId.HasValue ?
                new ObjectParameter("UserClientId", userClientId) :
                new ObjectParameter("UserClientId", typeof(long));
    
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("TopicId", topicId) :
                new ObjectParameter("TopicId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UpdateReadMessage", userClientIdParameter, topicIdParameter);
        }
    }
}
