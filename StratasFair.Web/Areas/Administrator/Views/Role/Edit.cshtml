@model StratasFair.BusinessEntity.Admin.RoleModel
@{
    ViewBag.Title = "Edit Role";
    Layout = "~/Areas/Administrator/Views/Shared/_Layout.cshtml";
}
<section class="content-header">
    <h1>
        Manage Role
        <small>Control panel</small>
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="@Url.Content("~/securehost/rootlogin/dashBoard")"><i class="fa fa-dashboard"></i> Home</a>
        </li>
        <li class="active">Manage Role</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="box box-primary">
            <div class="box-header lft-head">
                <h3 class="box-title">
                    Edit Roles
                </h3>
            </div>
            <div class="top-buttons-container rgt-head">
                <a href="@Url.Content("~/securehost/rootlogin/role/list")" class="btn btn-success">View</a>
                <a href="@Url.Content("~/securehost/rootlogin/role/add")" class="btn btn-info">
                    Add
                </a>
            </div>
            @using (@Html.BeginForm())
            {
                <input type="hidden" value="@Model.RoleId" id="hidRoleId" name="hidData" />

                <div class="box-body" style="width: 50%;">
                    <div class="form-group">
                        @Html.LabelFor(m => m.RoleName) <span class="asterisk">*</span>
                        @Html.TextBoxFor(m => m.RoleName, new { @class = "form-control", @placeholder = "Enter role name", @maxlength = "50" })
                        @Html.ValidationMessageFor(m => m.RoleName)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.RoleDescription) <span class="asterisk">*</span>
                        @Html.TextAreaFor(m => m.RoleDescription, new { @class = "form-control", @placeholder = "Enter role description", @maxlength = "150" })
                        @Html.ValidationMessageFor(m => m.RoleDescription)
                    </div>

                    @if (@Model.RoleId != 1) // for super admin
                    {
                        <div class="form-group">
                            <label>
                                Edit privileges
                            </label>
                            &nbsp; <input type="button" value="..." onclick="javascript:ShowPrev();" class="btn btn-default btn-sm"
                                          id="Button2" />
                        </div>
                    }
                </div>
                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">
                        Submit
                    </button>
                    <a href="@Url.Content("~/securehost/rootlogin/role/list")" class="btn btn-warning">Cancel </a>
                </div>
                <div id="ShowPrivTable" style="display: none">
                    <ul>
                        <li>
                            <strong>Menu Name</strong>
                        </li>

                        @if (@Model.MenuHTML != null && @Model.MenuHTML != "")
                        {
                            @Html.Raw(@Model.MenuHTML.ToString())
                        }
                        <li>
                            <button type="submit" class="btn btn-primary" onclick="return SavePrivillage();">
                                Submit
                            </button>
                        </li>
                    </ul>
                </div>
            }
        </div>
    </div>
</section>
@section scripts{
    <script type="text/javascript">
        $(function () {
            $('input[type=checkbox]').on('click', function (event) {
                var isChecked = event.delegateTarget.checked;
                if (isChecked == false)
                {
                    $("#chkHm_0").removeAttr("checked");
                }
                else
                {
                    var all_checkboxes = $('#ShowPrivTable input[type="checkbox"]');
                    if (all_checkboxes.filter(":checked").length == all_checkboxes.filter(':visible').length-1)
                    {
                        if($("#chkHm_0:checked").length==0)
                        {
                            document.getElementById('chkHm_0').checked = true;
                        }
                    }
                }
                CheckAllCheckBoxes("", isChecked, event.delegateTarget.id);

            });
        });
    </script>

    <script language="javascript" type="text/javascript">

        function CheckAllCheckBoxes(CheckboxID, valChecked, CntlId) {
            var searchEles1 = document.getElementById('ShowPrivTable').getElementsByTagName('input');
            for (var i = 0; i < searchEles1.length; i++) {
                if (searchEles1[i].type == 'checkbox') {
                    var elName = searchEles1[i].id;
                    if (elName.search(CntlId) == 0) {
                        document.getElementById(elName).checked = valChecked;

                    }
                }
            }
        }

        function ShowPrev() {

            if (document.getElementById("ShowPrivTable").style.display == 'none') {
                document.getElementById("ShowPrivTable").style.display = 'block';
            }
            else {
                document.getElementById("ShowPrivTable").style.display = 'none';
            }

        }

        var NewCount = 0;
        function GotoPrev() {
            history.back();
        }

        function SavePrivillage() {

            var urlemp = '@Url.Action("AddPrivillage", "Role")';

            var moduleIds = '';
            var roleId = $('#hidRoleId').val();
            var searchEles1 = document.getElementById('ShowPrivTable').getElementsByTagName('input');
            for (var i = 0; i < searchEles1.length; i++) {
                if (searchEles1[i].type == 'checkbox') {
                    var elName = searchEles1[i].id;
                    if (document.getElementById(elName).checked) {
                        var moduleId = elName.replace('chkHm_', 'hSubSubModuleId_');
                        if (document.getElementById(moduleId) != null) {
                            moduleIds = moduleIds + ',' + document.getElementById(moduleId).value;
                        }
                    }
                }
            }
            var result = 0;
            $.ajax({
                type: "POST",
                url: urlemp,
                timeout: 10000,
                'async': false,
                data: { ModuleId: moduleIds, RoleId: roleId },
                success: function (returndata) {
                    window.location.href = "List";
                }
            });
            if (result == 0) {
                return false;
            }
            else {
                return true;
            }

        }
    </script>
}