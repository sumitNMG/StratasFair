@model StratasFair.BusinessEntity.Front.ScheduleMeetingModel

<script type="text/javascript">

    function FnEditScheduleMeetingBegin() {
        $("#btnSubmit").hide();
        $("#dvLoader").show();
    }

    function FnEditScheduleMeetingSuccess(data) {

        $("#btnSubmit").show();
        $("#dvLoader").hide();
        if (data.result == 1) {                                                                                                                                                                                                                                                              $("#Details").val('');

            swal({
                type: "success",
                title: "Success",
                showConfirmButton: true,
                showCancelButton: false,
                confirmButtonText: "OK",
                closeOnConfirm: true,
                text: "<b>" + data.Msg + "</b>",
                html: true
            }, function () {
                window.location = window.location;
            });
        }
        else {
            swal({
                type: "warning",
                title: "Failed",
                showConfirmButton: true,
                showCancelButton: false,
                confirmButtonText: "OK",
                closeOnConfirm: true,
                text: "<b>" + data.Msg + "</b>",
                html: true
            });
        }
    }

    $("#StartTimeHour, #StartTimeMinute, #StartTimeAmPm").selectpicker({
        style: 'btn-info',
        size: 12
    });

    $(function () {
        $("#Editdatepicker").datepicker({
            changeMonth: true,
            changeYear: true,
            minDate: new Date()
        });
    });

    $(function () {
        $('#StrataOwnersDD1').multiselect({
            maxHeight: 200,
            includeSelectAllOption: true,
            buttonText: function (options, select) {

                if (options.length === 0) {
                    return 'Select';
                }
                if (options.length === select[0].length) {
                    return 'All selected (' + select[0].length + ')';
                }
                else if (options.length >= 6) {
                    return options.length + ' selected';
                }
                else {
                    var labels = [];
                    options.each(function () {
                        labels.push($(this).text());
                    });
                    return labels.join(', ') + '';
                }
            },
            onChange: function (option, checked, select) {
                $(this).toggleClass("checked");
            }

        });
    });

    $("#StrataOwnersDD1").change(function () {
        var selMulti = $.map($("#StrataOwnersDD option:selected"), function (el, i) {
            return $(el).val();
        });
        $("#EditSelectedMeetingInvite").val(selMulti.join(", "));
    });



</script>
<div class="modal-body">
    <h5 class="text-center">Edit Meeting Scheduled</h5>
    @using (Ajax.BeginForm("EditScheduleMeeting", "NoticeBoard", FormMethod.Post, new AjaxOptions { OnSuccess = "FnEditScheduleMeetingSuccess(data)", OnBegin = "FnEditScheduleMeetingBegin()" }, new { @class = "form-section", @id = "frmEditScheduleMeeting" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.MeetingId)
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="form-group">
                    <label>Subject<span class="required">*</span></label>
                    @Html.TextBoxFor(m => m.Subject, new { @class = "form-control", @maxlength = "100" })
                    @Html.ValidationMessageFor(m => m.Subject)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="form-group">
                    <label>Message<span class="required">*</span></label>
                    @Html.TextAreaFor(m => m.Message, new { @class = "form-control", @maxlength = "250" })
                    @Html.ValidationMessageFor(m => m.Message)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="form-group">
                    <label>Meeting Date<span class="required">*</span></label>
                    @Html.TextBoxFor(m => m.MeetingDate, new { @class = "calendar-icon form-control", @id = "Editdatepicker" })
                    @Html.ValidationMessageFor(m => m.MeetingDate)
                </div>
            </div>
        </div>
        <div class="row start-date">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="form-group">
                    <label>Meeting Time<span class="required">*</span></label>
                    <div class="row">
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                            @Html.DropDownList("StartTimeHour", new List<SelectListItem>
                                {
                                    new SelectListItem{ Text="01", Value = "1" },
                                    new SelectListItem{ Text="02", Value = "2" },
                                    new SelectListItem{ Text="03", Value = "3" },
                                    new SelectListItem{ Text="04", Value = "4" },
                                    new SelectListItem{ Text="05", Value = "5" },
                                    new SelectListItem{ Text="06", Value = "6" },
                                    new SelectListItem{ Text="07", Value = "7" },
                                    new SelectListItem{ Text="08", Value = "8" },
                                    new SelectListItem{ Text="09", Value = "9" },
                                    new SelectListItem{ Text="10", Value = "10" },
                                    new SelectListItem{ Text="11", Value = "11" },
                                    new SelectListItem{ Text="12", Value = "12" }
                                }, "Hour", new { @class = "selectpicker form-control", @InitialValue = "Hour" })
                            @Html.ValidationMessage("StartTimeHour")
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                            @Html.DropDownList("StartTimeMinute", new List<SelectListItem>
                                {
                                    new SelectListItem{ Text="00", Value = "0" },
                                    new SelectListItem{ Text="15", Value = "15" },
                                    new SelectListItem{ Text="30", Value = "30" },
                                    new SelectListItem{ Text="45", Value = "45" }
                                }, "Minute", new { @class = "selectpicker form-control", @InitialValue = "Minute" })
                            @Html.ValidationMessage("StartTimeMinute")
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                            @Html.DropDownList("StartTimeAmPm", new List<SelectListItem>
                                {
                                    new SelectListItem{ Text="AM", Value = "AM", Selected=true },
                                    new SelectListItem{ Text="PM", Value = "PM" }
                                }, "AM", new { @Id = "StartTimeAmPm", @class = "selectpicker form-control" })
                            @Html.ValidationMessage("StartTimeAmPm")
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="form-group">
                    <label>Invite Owner<span class="required">*</span></label>
                    @Html.HiddenFor(m => m.SelectedMeetingInvite, new { id = "EditSelectedMeetingInvite" })
                    @Html.HiddenFor(m => m.ScheduleMeetingInviteIds)
                    <select id="StrataOwnersDD1" class="selectpicker form-control"  multiple="multiple">
                        @{
        int[] ScheduleMeetingIdArray = null;
        if (!string.IsNullOrEmpty(Model.ScheduleMeetingInviteIds))
        {
            ScheduleMeetingIdArray = Model.ScheduleMeetingInviteIds.Split(",".ToCharArray()).Select(x => int.Parse(x.ToString())).ToArray();
        }
        foreach (var item in Model.StrataOwners)
        {
            if (ScheduleMeetingIdArray != null && ScheduleMeetingIdArray.Count() > 0)
            {
                if (ScheduleMeetingIdArray.Contains(Convert.ToInt32(item.UserClientId)))
                {

                    <option value='@item.UserClientId' selected="selected">@item.Name</option>
                }
                else
                {
                    <option value='@item.UserClientId'>@item.Name</option>
                }
            }
            else
            {
                <option value='@item.UserClientId'>@item.Name</option>
            }

        }
                        }
                    </select>


                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12 col-xs-12">
                <div class="form-group">
                    <input name="submit" value="Submit" class="btn btn-sm btn-block btn-yellow" type="submit">
                </div>
            </div>
        </div>
    }<!-- Form End -->
</div>